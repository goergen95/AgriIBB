geom_bar(mapping = aes(y=abandoned,x=ISO,fill=c("red","blue")), stat="identity")
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=abandoned,x=ISO,fill=ISO), stat="identity")
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=abandoned,x=ISO,fill=ISO), stat="identity")+
scale_fill_manual(values=c("#999999", "#E69F00"))
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=abandoned,x=ISO,fill=ISO), stat="identity")+
scale_fill_manual(values=c("lightskyblue", "red2"))
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=abandoned,x=ISO,fill=ISO), stat="identity")+
scale_fill_manual(values=c("red2","lightskyblue"))
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=active,x=ISO,fill=ISO), stat="identity")+
scale_fill_manual(values=c("red2","lightskyblue"))
ggplot(data = regions@data)+
geom_bar(mapping = aes(y=abandoned,x=ISO,fill=ISO), stat="identity")+
geom_bar(mapping = aes(y=active,x=ISO,fill=ISO), stat="identity")+
scale_fill_manual(values=c("red2","lightskyblue"))
regions@data
names(regions@data)
t(regions@data)
write.csv(regions@data,file = "../results/regions_data.csv")
names(regions)
lm(regions@data[1,5:18]~regions@data[1,34:47])
regions@data[1,5:18]
regions@data[1,34:47]
regions@data[4,34:47]
regions@data[5,34:47]
lm(regions@data[5,5:18]~regions@data[5,34:47])
lm(regions@data[5,5:18],regions@data[5,34:47])
?lm
lm(formula(regions@data[5,5:18]~regions@data[5,34:47]))
regions@data[5,34:47]
regions@data[5,5:18]
lm(as.numeric(regions@data[5,5:18])~as.numeric(regions@data[5,34:47]))
names(regions)
years=2003:2016
tmpNames = paste(tmp,years,collapse="")
# this scripts creates plots and calculates statistics for the analysis of
# land use activity in the IBB
library(raster)
tmpNames
tmpNames = paste(tmp,years,collapse="")
tmpNames = paste("tmp",years,collapse="")
tmpNames
tmpNames = paste("tmp",years,sep="")
tmpNames
prcNames = paste("prec",years,sep="")
inactiveNames=paste("in_",years,sep="")
inactiveNames
fields = readOGR("../results/shapes/fields.shp")
content = gContains(regions,fields,byid=TRUE)
indexEmpty = as.vector(which(colSums(content)==0))
namesEmpty = regionNames[indexEmpty]
lm?
?lm
mod = lm(regions@data[regions$NAME_2==region,activeNames] ~ regions@data[regions$NAME_2==region,prcNames])
activeNames = paste("ac_",years,sep="")
mod = lm(regions@data[regions$NAME_2==region,activeNames] ~ regions@data[regions$NAME_2==region,prcNames])
region = regions$NAME_1[4]
region
regions$NAME_2
region = regions$NAME_1[12]
mod = lm(regions@data[regions$NAME_2==region,activeNames] ~ regions@data[regions$NAME_2==region,prcNames])
regionNames = unique(regions@data$NAME_2)
regionNames
region = regionNames[12]
mod = lm(regions@data[regions$NAME_2==region,activeNames] ~ regions@data[regions$NAME_2==region,prcNames])
regions@data[regions$NAME_2==region,activeNames]
regions@data[regions$NAME_2==region,prcNames]
prcNames = paste("prec",years,sep="")
prcNames
regions@data[regions$NAME_2==region,prcNames]
names(regions@data)
prcNames = paste("prc",years,sep="")
mod = lm(regions@data[regions$NAME_2==region,activeNames] ~ regions@data[regions$NAME_2==region,prcNames])
regions@data[regions$NAME_2==region,activeNames]
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
mod
plot(as.numeric(regions@data[regions$NAME_2==region,prcNames]),as.numeric(regions@data[regions$NAME_2==region,activeNames]))
print(lm)
print(mod)
summary(mod)
summary(mod)
s = summary(mod)
s$terms
s$residuals
s$residuals
s$coefficients
s$r.squared
s$coefficients
s$coefficients[1,2]
s$coefficients[2,1]
s$coefficients[2,4]
round(s$coefficients[2,4],3)
results = data.frame(coef=coefficient,rsquared=rsquared,pvalue=pvalue)
coefficient = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = round(s$coefficients[2,4],3)
results = data.frame(coef=coefficient,rsquared=rsquared,pvalue=pvalue)
results
results = data.frame(region=region,coef=coefficient,rsquared=rsquared,pvalue=pvalue)
results
results = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
results[results$region,] = c(coefficient,rsquared,pvalue)
results[results$region,]
results[results$region==region,] = c(coefficient,rsquared,pvalue)
results[results$region==region,2:4] = c(coefficient,rsquared,pvalue)
results
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coefficient = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = round(s$coefficients[2,4],3)
resultsPREC[results$region==region,2:4] = c(coefficient,rsquared,pvalue)
}
resultsPREC
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coefficient = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = round(s$coefficients[2,4],3)
resultsPREC[results$region==region,2:4] = c(coefficient,rsquared,pvalue)
print(region)
}
resultsPREC
region = regionNames[22]
region
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
mod
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = round(s$coefficients[2,4],3)
coef
rsquared
pvalue
s$coefficients
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
print(region)
}
region = regionNames[23]
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
s
registerS3methods()
regionNames
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
region = regionNames[23]
region
region = regionNames[24]
region
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
regions@data[regions$NAME_2==region,activeNames]
namesEmpty
content = gContains(regions,fields,byid=TRUE)
indexEmpty = as.vector(which(colSums(content)==0))
namesEmpty = regionNames[indexEmpty]
namesEmpty
regions@data
regions@data[24,]
content = gContains(regions,fields,byid=TRUE)
content[23,]
content[24,]
regions[24,]
?try()
for (region in regionNames){
if(region %in% namesEmpty) next
print(region)
try(mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames])),silent = T)
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = s$r.squared
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsPREC
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,4)
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsPREC
round(s$r.squared,4)
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
resultsPREC
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,4)
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsPREC
resultsPREC = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsPREC
resultsTMP = data.frame(region=regions@data$NAME_2,coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,tmpNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsTMP[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
resultsTMP
KAZ = colSums(regions@data[regions$ISO=="KAZ"],)
names(regions)
KAZ = colSums(regions@data[regions$ISO=="KAZ",5:63])
KAZ
CHN = colSums(regions@data[regions$ISO=="CHN",5:63])
mod = lm(KAZ[,activeNames]~KAZ[,prcNames])
KAZ[,activeNames]
names(KAZ)
mod = lm(KAZ[activeNames]~KAZ[prcNames])
KAZ[activeNames]
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric((KAZ[prcNames])))
as.numeric(KAZ[prcNames])
KAZ[prcNames]
KAZ
# precipiation
KAZ = colSums(regions@data[regions$ISO=="KAZ",5:63],na.rm = T)
CHN = colSums(regions@data[regions$ISO=="CHN",5:63],na.rm = T)
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZ[prcNames]))
s = summary(mod)
s$coefficients
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
coef
rsquared
pvalue
globalPREC = data.frame(region=c("KAZ","CHN"),coef=rep(0,2),rsquared=rep(0,2),pvalue=rep(0,2))
globalPREC$coef[1] = s$coefficients[2,1]
globalPREC$rsquared[1]= round(s$r.squared,3)
globalPREC$pvalue[1]= s$coefficients[2,4]
global = data.frame(region=c("all","all","KAZ","CHN","KAZ","CHN"),variable=c("prec","temp","prec","prec","temp","temp"),coef=rep(0,6),rsquared=rep(0,6),pvalue=rep(0,6))
# large scale regression analysis
ALL = colSums(regions@data[,5:64]),na.rm=TRUE)
# large scale regression analysis
ALL = colSums(regions@data[,5:63]),na.rm=TRUE)
regions@data[,5:63])
# large scale regression analysis
ALL = colSums(regions@data[,5:63],na.rm=TRUE)
ALL
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[prcNames]))
global
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[prcNames]))
s = summary(mod)
globalPREC$coef[1] = s$coefficients[2,1]
globalPREC$rsquared[1]= round(s$r.squared,3)
globalPREC$pvalue[1]= s$coefficients[2,4]
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[prcNames]))
s = summary(mod)
global$coef[1] = s$coefficients[2,1]
global$rsquared[1]= round(s$r.squared,3)
global$pvalue[1]= s$coefficients[2,4]
global
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[tmpNames]))
s = summary(mod)
global$coef[2] = s$coefficients[2,1]
global$rsquared[2]= round(s$r.squared,3)
global$pvalue[2]= s$coefficients[2,4]
global
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZ[prcNames]))
s = summary(mod)
global$coef[3] = s$coefficients[2,1]
global$rsquared[3]= round(s$r.squared,3)
global$pvalue[3]= s$coefficients[2,4]
mod = lm(as.numeric(CHN[activeNames]) ~ as.numeric(CHN[prcNames]))
s = summary(mod)
global$coef[4] = s$coefficients[2,1]
global$rsquared[4]= round(s$r.squared,3)
global$pvalue[4]= s$coefficients[2,4]
global
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZtmpNames]))
s = summary(mod)
global$coef[5] = s$coefficients[2,1]
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZ[tmpNames]))
s = summary(mod)
global$coef[5] = s$coefficients[2,1]
global$rsquared[5]= round(s$r.squared,3)
global$pvalue[5]= s$coefficients[2,4]
mod = lm(as.numeric(CHN[activeNames]) ~ as.numeric(CHN[tmpNames]))
s = summary(mod)
global$coef[4] = s$coefficients[2,1]
global$rsquared[4]= round(s$r.squared,3)
global$pvalue[4]= s$coefficients[2,4]
global
as.numeric(CHN[activeNames])
as.numeric(CHN[tmpNames])
mod = lm(as.numeric(CHN[activeNames]) ~ as.numeric(CHN[tmpNames]))
s = summary(mod)
s
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[prcNames]))
s = summary(mod)
global$coef[1] = s$coefficients[2,1]
global$rsquared[1]= round(s$r.squared,3)
global$pvalue[1]= s$coefficients[2,4]
mod = lm(as.numeric(ALL[activeNames]) ~ as.numeric(ALL[tmpNames]))
s = summary(mod)
global$coef[2] = s$coefficients[2,1]
global$rsquared[2]= round(s$r.squared,3)
global$pvalue[2]= s$coefficients[2,4]
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZ[prcNames]))
s = summary(mod)
global$coef[3] = s$coefficients[2,1]
global$rsquared[3]= round(s$r.squared,3)
global$pvalue[3]= s$coefficients[2,4]
mod = lm(as.numeric(CHN[activeNames]) ~ as.numeric(CHN[prcNames]))
s = summary(mod)
global$coef[4] = s$coefficients[2,1]
global$rsquared[4]= round(s$r.squared,3)
global$pvalue[4]= s$coefficients[2,4]
mod = lm(as.numeric(KAZ[activeNames]) ~ as.numeric(KAZ[tmpNames]))
s = summary(mod)
global$coef[5] = s$coefficients[2,1]
global$rsquared[5]= round(s$r.squared,3)
global$pvalue[5]= s$coefficients[2,4]
mod = lm(as.numeric(CHN[activeNames]) ~ as.numeric(CHN[tmpNames]))
s = summary(mod)
global$coef[6] = s$coefficients[2,1]
global$rsquared[6]= round(s$r.squared,3)
global$pvalue[6]= s$coefficients[2,4]
global
resultsTMP
na.omit(resultsTMP)
which(sum(resultsTMP[,2:4])==0)
sum(resultsTMP[,2:4])
rowsum(resultsTMP[,2:4])
which(results$coef==0)
which(resultsTMP$coef==0)
resultTMP = resultsTMP[-which(resultsTMP$coef==0),]
resultTMP
resultsTMP = data.frame(region=regions@data$NAME_2,variable)rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
resultsTMP = data.frame(region=regions@data$NAME_2,variable),rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
resultsTMP = data.frame(region=regions@data$NAME_2,variable=rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,tmpNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsTMP[results$region==region,2:4] = c(coef,rsquared,pvalue)
}
warnings
warnings()
resultsTMP = data.frame(region=regions@data$NAME_2,variable=rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
resultsTMP
resultsTMP = data.frame(region=regions@data$NAME_2,variable=rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,tmpNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsTMP[results$region==region,3:5] = c(coef,rsquared,pvalue)
}
resultsPREC = data.frame(region=regions@data$NAME_2,variable=rep("prec",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,3:5] = c(coef,rsquared,pvalue)
}
resultsPREC
resultTMP = resultsPREC[-which(resultsTMP$coef==0),]
na.omit(resultsPREC)
resultsPREC = na.omit(resultsPREC)
resultPREC = resultsPREC[-which(resultsTMP$coef==0),]
resultPREC
resultsPREC = data.frame(region=regions@data$NAME_2,variable=rep("prec",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,prcNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsPREC[results$region==region,3:5] = c(coef,rsquared,pvalue)
}
resultsPREC = na.omit(resultsPREC)
resultPREC = resultsPREC[-which(resultsTMP$coef==0),]
resultsTMP = data.frame(region=regions@data$NAME_2,variable=rep("temp",35),coef=rep(0,35),rsquared=rep(0,35),pvalue=rep(0,35))
for (region in regionNames){
if(region %in% namesEmpty) next
if( region == "Semipalatinskiy") next
print(region)
mod = lm(as.numeric(regions@data[regions$NAME_2==region,activeNames]) ~ as.numeric(regions@data[regions$NAME_2==region,tmpNames]))
s = summary(mod)
coef = s$coefficients[2,1]
rsquared = round(s$r.squared,3)
pvalue = s$coefficients[2,4]
resultsTMP[results$region==region,3:5] = c(coef,rsquared,pvalue)
}
resultsTMP = na.omit(resultsTMP)
resultTMP = resultsTMP[-which(resultsTMP$coef==0),]
resultsTMP
resultsTMP = na.omit(resultsTMP)
resultTMP = resultsTMP[-which(resultsTMP$coef==0),]
resultTMP
resultsPREC
resultsPREC = na.omit(resultsPREC)
resultPREC = resultsPREC[-which(resultsTMP$coef==0),]
resultPREC
resultTMP
rbind(global,resultsPREC,resultTMP)
results = rbind(global,resultsPREC,resultTMP)
write.csv(results,file="../results/regression/stats_results.csv")
resultsPREC = resultsPREC[-which(resultsTMP$coef==0),]
results = rbind(global,resultsPREC,resultTMP)
write.csv(results,file="../results/regression/stats_results.csv")
names(regions)
colSums(regions@data[regions@data$ISO=="KAZ",active])
sum(regions@data[regions@data$ISO=="KAZ",active])
rowsum(regions@data[regions@data$ISO=="KAZ",active])
sum(regions@data[regions@data$ISO=="KAZ","active"])
rowsum(regions@data[regions@data$ISO=="KAZ","abadnoned"])
rowsum(regions@data[regions@data$ISO=="KAZ","abandoned"])
sum(regions@data[regions@data$ISO=="KAZ","abandoned"])
sum(regions@data[regions@data$ISO=="CHN","active"])
sum(regions@data[regions@data$ISO=="CHN","abandoned"])
